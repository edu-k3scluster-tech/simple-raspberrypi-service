name: Docker Build/Publish Image 
on:  
  push:    
    branches:
      - main
    tags:
      - '*'
jobs:
  docker:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v2

    - name: Set up QEMU
      uses: docker/setup-qemu-action@v1

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1

    - name: Login to DockerHub
      uses: docker/login-action@v1
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Cache Docker layers
      uses: actions/cache@v2
      with:
        path: /tmp/.buildx-cache
        key: ${{ runner.os }}-buildx-${{ github.sha }}
        restore-keys: |
          ${{ runner.os }}-buildx-

            - name: Build and push
    - name: Build an image
      uses: docker/build-push-action@v2
      with:
        platforms: linux/arm
        context: .
        push: true
        tags: ghcr.io/${{ github.repository }}:${{ github.sha }}
        cache-from: type=local,src=/tmp/.buildx-cache
        cache-to: type=local,dest=/tmp/.buildx-cache-new

    - name: Move cache
      run: |
        rm -rf /tmp/.buildx-cache
        mv /tmp/.buildx-cache-new /tmp/.buildx-cache
  deployment:
    runs-on: ubuntu-20.04
    needs: docker
    steps:
    - name: Checkout
      uses: actions/checkout@v2
    - name: Set staging env
      if: startsWith(github.ref, 'refs/heads/')
      run: |
        echo "KUBE_ENV=staging" >> $GITHUB_ENV
    - name: Set production env
      if: startsWith(github.ref, 'refs/tags/')
      run: |
        echo "KUBE_ENV=production" >> $GITHUB_ENV
    - name: Prepare k8s creds and GPG key
      run: |
        echo "$KUBECONFIG_FILE" > /tmp/kubeconfig
        echo "$GPG_PRIVATE_KEY" > /tmp/gpg_b64
        base64 -d /tmp/gpg_b64 > /tmp/gpg.key
      env:
        KUBECONFIG_FILE: '${{ secrets.KUBECONFIG_FILE }}'
        GPG_PRIVATE_KEY: '${{ secrets.GPG_PRIVATE_KEY }}'
    - name: Download sops
      run: |
        curl -o /tmp/sops -L https://github.com/mozilla/sops/releases/download/v3.7.1/sops-v3.7.1.linux
        chmod +x /tmp/sops
    - name: Run custom scripts
      uses: addnab/docker-run-action@v3
      with:
        image: chatwork/argocd-helmfile:2.0.3-0.139.8
        options: |
          -v ${{ github.workspace }}:/mnt/app/
          -v /tmp/kubeconfig:/home/argocd/.kube/config
          -v /tmp/gpg.key:/tmp/gpg.key
          -v /tmp/sops:/usr/local/bin/sops
          -e IMAGE_TAG=${{ github.sha }}
          -e KUBE_ENV=${{ env.KUBE_ENV }}
          -e GITHUB_REPOSITORY=${{ github.event.repository.name }}
        run: |
          gpg --import /tmp/gpg.key
          mkdir ~/app
          cp -r /mnt/app/. ~/app
          helm secrets upgrade -n $GITHUB_REPOSITORY-$KUBE_ENV \
            --install \
            --create-namespace \
            --set image.tag=${IMAGE_TAG} \
            -f ~/app/.ci/helm/${KUBE_ENV}.values.yaml \
            -f ~/app/.ci/helm/secrets.${KUBE_ENV}.values.yaml \
            ${GITHUB_REPOSITORY}-${KUBE_ENV} ~/app/.ci/helm/chart
